/**
 * @license
 *
 * Program:     Kurve
 * Author:      Markus Mächler, marmaechler@gmail.com
 * License:     http://www.gnu.org/licenses/gpl.txt
 * Link:        http://achtungkurve.com
 *
 * Copyright © 2014 Markus Mächler
 *
 * Kurve is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Kurve is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Kurve.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
"use strict";window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;"use strict";var Kurve={players:[],playersById:{},init:function(){this.initPlayers();this.Field.init();this.Menu.init();this.Game.init();this.Lightbox.init()},initPlayers:function(){Kurve.Config.players.forEach(function(player){var player=new Kurve.Player(player.id,player.color,player.keyLeft,player.keyRight,player.keySuperpower);Kurve.players.push(player);Kurve.playersById[player.getId()]=player})},getPlayer:function(playerId){return this.playersById[playerId]}};document.addEventListener("DOMContentLoaded",Kurve.init.bind(Kurve));"use strict";Kurve.Factory={getSuperpower:function(type){if(!Kurve.Superpowerconfig.hasOwnProperty(type))throw"Superpower type "+type+" is not yet registered.";var hooks=Kurve.Superpowerconfig[type].hooks;var act=Kurve.Superpowerconfig[type].act;var helpers=Kurve.Superpowerconfig[type].helpers;return new Kurve.Superpower(hooks,act,helpers,type)}};"use strict";Kurve.Config={Field:{borderColor:"#ACAC9D",width:.7},Curve:{stepLength:3,lineWidth:4,dAngle:.08,holeInterval:150},Game:{startDelay:2e3,fps:25},players:[{id:"red",color:"#D4373E",keyLeft:49,keyRight:81,keySuperpower:65},{id:"orange",color:"#FFA039",keyLeft:90,keyRight:85,keySuperpower:73},{id:"green",color:"#3BCB69",keyLeft:89,keyRight:88,keySuperpower:67},{id:"blue",color:"#3B90C3",keyLeft:86,keyRight:66,keySuperpower:78},{id:"purple",color:"#7D11CD",keyLeft:79,keyRight:48,keySuperpower:80},{id:"pink",color:"#DC72FF",keyLeft:53,keyRight:54,keySuperpower:55}]};"use strict";Kurve.Utility=function(element){if(element instanceof String){}return new Kurve.Utility.Element(element)};Kurve.Utility.Element=function(element){this.element=element};Kurve.Utility.round=function(number,digitsAfterComa){return Math.round(number*Math.pow(10,digitsAfterComa))/Math.pow(10,digitsAfterComa)};Kurve.Utility.addClass=function(className,elementId){var element=document.getElementById(elementId);if(element===null)return false;element.className+=" "+className};Kurve.Utility.removeClass=function(className,elementId){var element=document.getElementById(elementId);if(element===null)return false;var regExp=new RegExp("(^|\\s)"+className+"($|\\s)","g");element.className=element.className.replace(regExp," ")};Kurve.Utility.setClassName=function(className,elementId){var element=document.getElementById(elementId);if(element===null)return false;element.className=className};var u=Kurve.Utility;"use strict";Kurve.Menu={boundOnKeyDown:null,init:function(){this.initPlayerMenu();this.addWindowListeners();this.addMouseListeners()},initPlayerMenu:function(){var playerHTML="";Kurve.players.forEach(function(player){playerHTML+=player.renderMenuItem()});document.getElementById("menu-players-list").innerHTML+=playerHTML},addWindowListeners:function(){this.boundOnKeyDown=this.onKeyDown.bind(this);window.addEventListener("keydown",this.boundOnKeyDown,false)},addMouseListeners:function(){var playerItems=document.getElementById("menu-players-list").children;for(var i=0;i<playerItems.length;i++){playerItems[i].addEventListener("click",this.onPlayerItemClicked,false)}},removeWindowListeners:function(){window.removeEventListener("keydown",this.boundOnKeyDown,false)},onPlayerItemClicked:function(event){Kurve.Menu.togglePlayerActivation(this.id)},onKeyDown:function(event){if(event.keyCode===32)Kurve.Menu.onSpaceDown();Kurve.players.forEach(function(player){if(player.isKeyLeft(event.keyCode)){Kurve.Menu.activatePlayer(player.getId())}else if(player.isKeyRight(event.keyCode)){Kurve.Menu.deactivatePlayer(player.getId())}else if(player.isKeySuperpower(event.keyCode)){Kurve.Menu.nextSuperpower(player.getId())}})},onSpaceDown:function(){Kurve.players.forEach(function(player){if(player.isActive){Kurve.Game.curves.push(new Kurve.Curve(player,Kurve.Game,Kurve.Field,Kurve.Config.Curve))}});if(Kurve.Game.curves.length<=1){Kurve.Game.curves=[];return}u.addClass("hidden","menu");u.removeClass("hidden","field");u.removeClass("hidden","content-right");Kurve.Game.startGame()},onNextSuperPowerClicked:function(event,playerId){event.stopPropagation();Kurve.Menu.nextSuperpower(playerId)},onPreviousSuperPowerClicked:function(event,playerId){event.stopPropagation();Kurve.Menu.previousSuperpower(playerId)},nextSuperpower:function(playerId){var player=Kurve.getPlayer(playerId);var count=0;var superpowerType="";for(var i in Kurve.Superpowerconfig.types){count++;if(!(Kurve.Superpowerconfig.types[i]===player.getSuperpower().getType()))continue;if(Object.keys(Kurve.Superpowerconfig.types).length===count){superpowerType=Object.keys(Kurve.Superpowerconfig.types)[0]}else{superpowerType=Object.keys(Kurve.Superpowerconfig.types)[count]}break}player.setSuperpower(Kurve.Factory.getSuperpower(superpowerType))},previousSuperpower:function(playerId){var player=Kurve.getPlayer(playerId);var count=0;var superpowerType="";for(var i in Kurve.Superpowerconfig.types){count++;if(!(Kurve.Superpowerconfig.types[i]===player.getSuperpower().getType()))continue;if(1===count){superpowerType=Object.keys(Kurve.Superpowerconfig.types)[Object.keys(Kurve.Superpowerconfig.types).length-1]}else{superpowerType=Object.keys(Kurve.Superpowerconfig.types)[count-2]}break}player.setSuperpower(Kurve.Factory.getSuperpower(superpowerType))},activatePlayer:function(playerId){Kurve.getPlayer(playerId).isActive=true;u.removeClass("inactive",playerId);u.addClass("active",playerId)},deactivatePlayer:function(playerId){Kurve.getPlayer(playerId).isActive=false;u.removeClass("active",playerId);u.addClass("inactive",playerId)},togglePlayerActivation:function(playerId){if(Kurve.getPlayer(playerId).isActive){Kurve.Menu.deactivatePlayer(playerId)}else{Kurve.Menu.activatePlayer(playerId)}},requestFullScreen:function(){document.body.webkitRequestFullScreen()}};"use strict";Kurve.Game={runIntervalId:null,fps:Kurve.Config.Game.fps,intervalTimeOut:null,maxPoints:null,keysDown:{},running:false,curves:[],runningCurves:{},players:[],deathMatch:false,isPaused:false,isRoundStarted:false,playerScoresElement:null,init:function(){this.intervalTimeOut=Math.round(1e3/this.fps);this.playerScoresElement=document.getElementById("player-scores")},run:function(){requestAnimationFrame(this.drawFrame.bind(this))},drawFrame:function(){for(var i in this.runningCurves){if(this.runningCurves[i]!==undefined)this.runningCurves[i].drawNextFrame()}},addWindowListeners:function(){Kurve.Menu.removeWindowListeners();window.addEventListener("keydown",this.onKeyDown.bind(this));window.addEventListener("keyup",this.onKeyUp.bind(this))},onKeyDown:function(event){if(event.keyCode===32)this.onSpaceDown();this.keysDown[event.keyCode]=true},onKeyUp:function(event){delete this.keysDown[event.keyCode]},isKeyDown:function(keyCode){return this.keysDown[keyCode]===true},onSpaceDown:function(){if(this.running||this.isPaused)return this.togglePause();if(!this.isRoundStarted&&!this.deathMatch)return this.startNewRound();if(!this.isRoundStarted&&this.deathMatch)return this.startDeathMatch()},togglePause:function(){if(this.isPaused){Kurve.Lightbox.hide();this.startRun()}else{this.stopRun();Kurve.Lightbox.show("<h2>Game is paused</h2>")}this.isPaused=!this.isPaused},startGame:function(){this.maxPoints=(this.curves.length-1)*10;this.addPlayers();this.addWindowListeners();this.renderPlayerScores();this.startNewRound.bind(this)},renderPlayerScores:function(){var playerHTML="";this.players.sort(this.playerSorting);this.players.forEach(function(player){playerHTML+=player.renderScoreItem()});this.playerScoresElement.innerHTML=playerHTML},playerSorting:function(playerA,playerB){return playerB.getPoints()-playerA.getPoints()},addPlayers:function(){Kurve.Game.curves.forEach(function(curve){Kurve.Game.players.push(curve.getPlayer())})},notifyDeath:function(curve){delete this.runningCurves[curve.getPlayer().getId()];this.losers.push(curve);for(var i in this.runningCurves){this.runningCurves[i].getPlayer().incrementPoints()}this.renderPlayerScores();if(Object.keys(this.runningCurves).length===1)this.terminateRound()},startNewRound:function(){this.isRoundStarted=true;this.losers=[];Kurve.Field.drawField();this.initRun();this.renderPlayerScores();setTimeout(this.startRun.bind(this),Kurve.Config.Game.startDelay)},startRun:function(){this.running=true;this.runIntervalId=setInterval(this.run.bind(this),this.intervalTimeOut)},stopRun:function(){this.running=false;clearInterval(this.runIntervalId)},initRun:function(){this.curves.forEach(function(curve){Kurve.Game.runningCurves[curve.getPlayer().getId()]=curve;curve.setRandomPosition(Kurve.Field.getRandomPosition());curve.setRandomAngle();curve.drawPoint(Kurve.Field.ctx);curve.getPlayer().getSuperpower().isActive=false})},terminateRound:function(){if(this.deathMatch){var curve=this.runningCurves[Object.keys(this.runningCurves)[0]];this.gameOver(curve.getPlayer())}this.isRoundStarted=false;this.stopRun();this.runningCurves={};this.incrementSuperpowers();this.checkForWinner()},incrementSuperpowers:function(){var numberOfPlayers=this.players.length;this.players[numberOfPlayers-1].getSuperpower().count+=2;var numberOfOtherPlayersGettingSomething=u.round((numberOfPlayers-2)/2,0);for(var i=numberOfOtherPlayersGettingSomething;i>0;i--){this.players[numberOfPlayers-1-i].getSuperpower().count++}},checkForWinner:function(){if(this.deathMatch)return;var winners=[];this.players.forEach(function(player){if(player.getPoints()>=Kurve.Game.maxPoints)winners.push(player)});if(winners.length===0)return;if(winners.length===1)this.gameOver(winners[0]);if(winners.length>1)this.initDeathMatch(winners)},initDeathMatch:function(winners){this.deathMatch=true;Kurve.Lightbox.show("<h1>DEATHMATCH!</h1>");var winnerCurves=[];this.curves.forEach(function(curve){winners.forEach(function(player){if(curve.getPlayer()===player){winnerCurves.push(curve);player.setColor("#333")}})});this.curves=winnerCurves},startDeathMatch:function(winners){Kurve.Lightbox.hide();this.startNewRound()},gameOver:function(winner){Kurve.Lightbox.show('<h1 class="active '+winner.getId()+'">'+winner.getId()+" wins!</h1>"+'<a href="/" class="button">Start new game</a>')}};"use strict";Kurve.Field={canvas:null,ctx:null,width:null,height:null,drawnPixels:[],init:function(){this.initCanvas();this.initContext();this.initField()},initCanvas:function(){var width=window.innerWidth*Kurve.Config.Field.width;var height=window.innerHeight;this.canvas=document.getElementById("field");this.canvas.width=width;this.canvas.height=height;this.width=width;this.height=height},initContext:function(){this.ctx=this.canvas.getContext("2d")},initField:function(){this.drawField()},drawField:function(){this.ctx.strokeStyle=Kurve.Config.Field.borderColor;this.ctx.lineWidth=3;this.ctx.clearRect(0,0,this.width,this.height);this.ctx.rect(0,0,this.width,this.height);this.ctx.stroke();this.drawnPixels=[]},drawLine:function(fromPoint,toPoint){this.ctx.beginPath();this.ctx.strokeStyle=this.getPlayer().getColor();this.ctx.lineWidth=this.getOptions().lineWidth;ctx.moveTo(fromPoint.getPosX(),fromPoint.getPosY());ctx.lineTo(toPoint.getPosX(),toPoint.getPosY());ctx.globalAlpha=1;this.getField().addPointsToDrawnPixel(this.trace);ctx.stroke()},addPointsToDrawnPixel:function(points){points.forEach(function(point){Kurve.Field.addPointToDrawnPixel(point)})},addPointToDrawnPixel:function(point){if(this.drawnPixels[point.getPosX(0)]===undefined){this.drawnPixels[point.getPosX(0)]=[]}this.drawnPixels[point.getPosX(0)][point.getPosY(0)]=true},isPointOutOfBounds:function(point){return point.getPosX()<=0||point.getPosY()<=0||point.getPosX()>=this.width||point.getPosY()>=this.height},isPointDrawn:function(point){return this.drawnPixels[point.getPosX(0)]!==undefined&&this.drawnPixels[point.getPosX(0)][point.getPosY(0)]===true},getRandomPosition:function(borderPadding){if(borderPadding===undefined)borderPadding=20;var posX=borderPadding+Math.round((this.width-2*borderPadding)*Math.random());var posY=borderPadding+Math.round((this.height-2*borderPadding)*Math.random());return new Kurve.Point(posX,posY)}};"use strict";Kurve.Superpowerconfig={};Kurve.Superpowerconfig.types={RUN_FASTER:"RUN_FASTER",JUMP:"JUMP",INVISIBLE:"INVISIBLE",CROSS_BAR:"CROSS_BAR"};Kurve.Superpowerconfig.hooks={DRAW_NEXT_FRAME:"DRAW_NEXT_FRAME",DRAW_LINE:"DRAW_LINE",IS_COLLIDED:"IS_COLLIDED"};Kurve.Superpowerconfig[Kurve.Superpowerconfig.types.RUN_FASTER]={label:"run faster",hooks:[Kurve.Superpowerconfig.hooks.DRAW_NEXT_FRAME],helpers:{executionTime:0,initAct:function(){this.decrementCount();this.isActive=true;this.helpers.executionTime=4*Kurve.Game.fps},closeAct:function(){this.isActive=false}},act:function(hook,curve){if(!this.isActive)this.helpers.initAct.call(this);if(this.helpers.executionTime<1)this.helpers.closeAct.call(this);curve.moveToNextFrame();curve.checkForCollision();curve.drawLine(curve.getField().ctx);this.helpers.executionTime--}};Kurve.Superpowerconfig[Kurve.Superpowerconfig.types.JUMP]={label:"jump",hooks:[Kurve.Superpowerconfig.hooks.DRAW_NEXT_FRAME],helpers:{jumpWidth:10,timeOut:250,previousExecution:new Date},act:function(hook,curve){var now=new Date;if(now.getTime()-this.helpers.previousExecution.getTime()>this.helpers.timeOut){var jumpedPosition=curve.getMovedPosition(curve.getOptions().stepLength*this.helpers.jumpWidth);curve.setNextPosition(jumpedPosition);curve.previousMiddlePoint=jumpedPosition;this.helpers.previousExecution=now;this.decrementCount()}}};Kurve.Superpowerconfig[Kurve.Superpowerconfig.types.INVISIBLE]={label:"invisible",hooks:[Kurve.Superpowerconfig.hooks.DRAW_LINE,Kurve.Superpowerconfig.hooks.IS_COLLIDED],helpers:{executionTime:0,initAct:function(){this.decrementCount();this.isActive=true;this.helpers.executionTime=4*Kurve.Game.fps},closeAct:function(){this.isActive=false}},act:function(hook,curve){if(hook===Kurve.Superpowerconfig.hooks.DRAW_LINE){if(!this.isActive)this.helpers.initAct.call(this);if(this.helpers.executionTime<1)this.helpers.closeAct.call(this);curve.invisible=true;this.helpers.executionTime--}else if(hook===Kurve.Superpowerconfig.hooks.IS_COLLIDED&&this.isActive){return false}}};Kurve.Superpowerconfig[Kurve.Superpowerconfig.types.CROSS_BAR]={label:"cross bar",hooks:[Kurve.Superpowerconfig.hooks.DRAW_NEXT_FRAME],helpers:{timeOut:250,previousExecution:new Date,barWidth:40},act:function(hook,curve){var now=new Date;if(now.getTime()-this.helpers.previousExecution.getTime()>this.helpers.timeOut){var leftEndX=Math.cos(curve.getOptions().angle-Math.PI/2)*this.helpers.barWidth+curve.getPosition().getPosX();var leftEndY=Math.sin(curve.getOptions().angle-Math.PI/2)*this.helpers.barWidth+curve.getPosition().getPosY();var rightEndX=Math.cos(curve.getOptions().angle+Math.PI/2)*this.helpers.barWidth+curve.getPosition().getPosX();var rightEndY=Math.sin(curve.getOptions().angle+Math.PI/2)*this.helpers.barWidth+curve.getPosition().getPosY();var ctx=Kurve.Field.ctx;ctx.beginPath();ctx.strokeStyle=curve.getPlayer().getColor();ctx.lineWidth=curve.getOptions().lineWidth;ctx.moveTo(leftEndX,leftEndY);ctx.lineTo(rightEndX,rightEndY);ctx.stroke();this.helpers.previousExecution=now;this.decrementCount()}}};"use strict";Kurve.Superpower=function(hooks,act,helpers,type){this.count=1;this.isActive=false;this.act=act;this.helpers=helpers;this.incrementCount=function(){this.count++;Kurve.Game.renderPlayerScores()};this.decrementCount=function(){this.count--;Kurve.Game.renderPlayerScores()};this.usesHook=function(hook){return hooks.indexOf(hook)>-1};this.getType=function(){return type};this.getLabel=function(){return Kurve.Superpowerconfig[this.getType()].label}};"use strict";Kurve.Curve=function(player,game,field,config,superpower){var position=null;var nextPosition=null;this.trac=[];this.invisible=false;this.previousMiddlePoint=null;this.previousMiddlePosition=null;var options={stepLength:config.stepLength,lineWidth:config.lineWidth,angle:0,dAngle:config.dAngle,holeInterval:config.holeInterval,holeCountDown:config.holeInterval};this.incrementAngle=function(){options.angle+=options.dAngle};this.decrementAngle=function(){options.angle-=options.dAngle};this.setPosition=function(newPosition){position=newPosition};this.setNextPosition=function(newPosition){nextPosition=newPosition};this.setRandomPosition=function(newPosition){position=nextPosition=this.previousMiddlePosition=this.previousMiddlePoint=newPosition};this.setAngle=function(newAngle){options.angle=newAngle};this.getPlayer=function(){return player};this.getGame=function(){return game};this.getField=function(){return field};this.getSuperpower=function(){return superpower};this.getPosition=function(){return position};this.getNextPosition=function(){return nextPosition};this.getOptions=function(){return options}};Kurve.Curve.prototype.drawNextFrame=function(){this.moveToNextFrame();this.checkForCollision();this.drawLine(this.getField().ctx);if(this.useSuperpower(Kurve.Superpowerconfig.hooks.DRAW_NEXT_FRAME)){this.getPlayer().getSuperpower().act(Kurve.Superpowerconfig.hooks.DRAW_NEXT_FRAME,this)}};Kurve.Curve.prototype.drawPoint=function(ctx){ctx.beginPath();ctx.fillStyle=this.getPlayer().getColor();ctx.arc(this.getPosition().getPosX(),this.getPosition().getPosY(),2,0,2*Math.PI,false);ctx.fill()};Kurve.Curve.prototype.drawLine=function(ctx){ctx.beginPath();this.invisible=this.getOptions().holeCountDown<0;ctx.strokeStyle=this.getPlayer().getColor();ctx.lineWidth=this.getOptions().lineWidth;if(this.useSuperpower(Kurve.Superpowerconfig.hooks.DRAW_LINE))this.getPlayer().getSuperpower().act(Kurve.Superpowerconfig.hooks.DRAW_LINE,this);ctx.moveTo(this.previousMiddlePosition.getPosX(),this.previousMiddlePosition.getPosY());ctx.lineTo(this.getNextPosition().getPosX(),this.getNextPosition().getPosY());if(this.invisible){ctx.globalAlpha=0;if(this.getOptions().holeCountDown<-1)this.getOptions().holeCountDown=this.getOptions().holeInterval}else{ctx.globalAlpha=1;this.getField().addPointsToDrawnPixel(this.trace)}this.getOptions().holeCountDown--;ctx.stroke()};Kurve.Curve.prototype.moveToNextFrame=function(){this.computeNewAngle();var middlePoint=this.getMovedPosition(this.getOptions().stepLength/2);var nextPoint=this.getMovedPosition(this.getOptions().stepLength);this.trace=this.getPointSurroundings(nextPoint);this.trace.concat(this.getPointSurroundings(middlePoint));if(this.previousMiddlePoint===null)this.previousMiddlePoint=middlePoint;this.previousMiddlePosition=this.previousMiddlePoint;this.setPosition(this.getNextPosition());this.setNextPosition(nextPoint);this.previousMiddlePoint=middlePoint};Kurve.Curve.prototype.getMovedPosition=function(step){var posX=this.getNextPosition().getPosX()+step*Math.cos(this.getOptions().angle);var posY=this.getNextPosition().getPosY()+step*Math.sin(this.getOptions().angle);return new Kurve.Point(posX,posY)};Kurve.Curve.prototype.getPointSurroundings=function(point){var posX=point.getPosX(0);var posY=point.getPosY(0);var pointSurroundings=[];pointSurroundings.push(new Kurve.Point(posX,posY));pointSurroundings.push(new Kurve.Point(posX+1,posY));pointSurroundings.push(new Kurve.Point(posX+1,posY-1));pointSurroundings.push(new Kurve.Point(posX,posY-1));pointSurroundings.push(new Kurve.Point(posX-1,posY-1));pointSurroundings.push(new Kurve.Point(posX-1,posY));pointSurroundings.push(new Kurve.Point(posX-1,posY+1));pointSurroundings.push(new Kurve.Point(posX,posY+1));pointSurroundings.push(new Kurve.Point(posX+1,posY+1));return pointSurroundings};Kurve.Curve.prototype.checkForCollision=function(){if(this.isCollided(this.getNextPosition()))this.die()};Kurve.Curve.prototype.isCollided=function(position){if(this.useSuperpower(Kurve.Superpowerconfig.hooks.IS_COLLIDED))return this.getPlayer().getSuperpower().act(Kurve.Superpowerconfig.hooks.IS_COLLIDED,this);return this.getField().isPointOutOfBounds(position)||this.getField().isPointDrawn(position)};Kurve.Curve.prototype.die=function(){this.getGame().notifyDeath(this)};Kurve.Curve.prototype.computeNewAngle=function(){if(this.getGame().isKeyDown(this.getPlayer().getKeyRight())){this.incrementAngle()}else if(this.getGame().isKeyDown(this.getPlayer().getKeyLeft())){this.decrementAngle()}};Kurve.Curve.prototype.setRandomAngle=function(){this.setAngle(2*Math.PI*Math.random())};Kurve.Curve.prototype.useSuperpower=function(hook){if(!this.getPlayer().getSuperpower().usesHook(hook))return false;if(this.getPlayer().getSuperpower().isActive)return true;if(Kurve.Game.isKeyDown(this.getPlayer().getKeySuperpower())&&this.getPlayer().getSuperpower().count>0)return true;return false};"use strict";Kurve.Point=function(posX,posY){this.getPosX=function(precision){if(precision===undefined)return posX;return u.round(posX,precision)};this.getPosY=function(precision){if(precision===undefined)return posY;return u.round(posY,precision)}};Kurve.Point.prototype.equals=function(point){return point.getPosX(0)===this.getPosX(0)&&point.getPosY(0)===this.getPosY(0)};Kurve.Point.prototype.clone=function(){return new Kurve.Point(this.getPosX(),this.getPosY())};"use strict";Kurve.Player=function(id,color,keyLeft,keyRight,keySuperpower){var points=0;var superpower=Kurve.Factory.getSuperpower(Kurve.Superpowerconfig.types.RUN_FASTER);var superPowerElement=null;this.isActive=false;this.incrementPoints=function(){points++};this.setSuperpower=function(newSuperpower){superpower=newSuperpower;if(superPowerElement===null){superPowerElement=document.getElementById(this.getId()+"-superpower")}superPowerElement.innerHTML=this.getSuperpower().getLabel()};this.setColor=function(newColor){color=newColor};this.getPoints=function(){return points};this.getId=function(){return id};this.getColor=function(){return color};this.getSuperpower=function(){return superpower};this.getKeyLeft=function(){return keyLeft};this.getKeyRight=function(){return keyRight};this.getKeySuperpower=function(){return keySuperpower}};Kurve.Player.prototype.renderMenuItem=function(){return'<div id="'+this.getId()+'" class="player inactive '+this.getId()+'">'+'<div class="title light"><h2>'+this.getId()+"</h2></div>"+'<div class="key left light"><div>'+this.getKeyLeftChar()+"</div></div>"+'<div class="key right light"><div>'+this.getKeyRightChar()+"</div></div>"+'<div class="superpower">'+'<div class="key light">'+this.getKeySuperpowerChar()+"</div>"+'<div class="superpowerType light">'+'<div class="left" onclick="Kurve.Menu.onPreviousSuperPowerClicked(event, \''+this.getId()+"')\"></div>"+'<div class="superpowers">'+'<div id="'+this.getId()+'-superpower">'+this.getSuperpower().getLabel()+"</div>"+"</div> "+'<div class="right" onclick="Kurve.Menu.onNextSuperPowerClicked(event, \''+this.getId()+"')\"></div>"+"</div> "+"</div>"+'<div class="clear"></div>'+"</div>"};Kurve.Player.prototype.renderScoreItem=function(){return'<div class="active '+this.getId()+'">'+'<div class="title"><h2>'+this.getId()+"</h2></div>"+'<div class="points">'+this.getPoints()+"</div>"+'<div class="clear"></div>'+'<div class="superpowers">'+this.renderNumberOfSuperPowers()+"</div>"+'<div class="clear"></div>'+"</div>"};Kurve.Player.prototype.renderNumberOfSuperPowers=function(){var superpowers="";for(var i=0;i<this.getSuperpower().count;i++){superpowers+='<div class="superpowerCircle '+this.getId()+'"></div>'}return superpowers};Kurve.Player.prototype.isKeyRight=function(keyCode){return this.getKeyRight()===keyCode};Kurve.Player.prototype.isKeyLeft=function(keyCode){return this.getKeyLeft()===keyCode};Kurve.Player.prototype.isKeySuperpower=function(keyCode){return this.getKeySuperpower()===keyCode};Kurve.Player.prototype.getKeyLeftChar=function(){return String.fromCharCode(this.getKeyLeft())};Kurve.Player.prototype.getKeyRightChar=function(){return String.fromCharCode(this.getKeyRight())};Kurve.Player.prototype.getKeySuperpowerChar=function(){return String.fromCharCode(this.getKeySuperpower())};"use strict";Kurve.Lightbox={lightboxOverlay:null,lightboxContent:null,init:function(){this.lightboxOverlay=document.getElementById("lightbox-overlay");this.lightboxContent=document.getElementById("lightbox-content")},show:function(htmlContent){u.removeClass("hidden","lightbox-overlay");this.lightboxContent.innerHTML=htmlContent},hide:function(){u.setClassName("hidden","lightbox-overlay");this.lightboxContent.innerHTML=""}};